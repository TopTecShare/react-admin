{"version":3,"sources":["constants/ChartConstant.js","components/shared-components/ChartWidget/index.js","components/shared-components/RegiondataWidget/index.js","components/shared-components/DonutChartWidget/index.js","views/app-views/dashboards/analytic/AnalyticDashboardData.js","views/app-views/dashboards/analytic/index.js"],"names":["COLOR_2","COLORS","apexLineChartDefaultOption","chart","zoom","enabled","toolbar","show","colors","dataLabels","stroke","width","curve","lineCap","legend","position","horizontalAlign","offsetY","itemMargin","vertical","tooltipHoverFormatter","val","opts","w","globals","series","seriesIndex","dataPointIndex","xaxis","categories","grid","lines","yaxis","apexAreaChartDefaultOption","apexBarChartDefaultOption","plotOptions","bar","horizontal","columnWidth","startingShapre","endingShape","inverseOrder","fill","opacity","tooltip","y","formatter","apexPieChartDefaultOption","pie","size","donut","labels","total","showAlways","label","fontSize","fontFamily","fontWeight","color","seriesTotals","reduce","a","b","apexSparklineChartDefultOption","type","sparkline","fixed","x","title","seriesName","marker","titleStyle","zIndex","extraStyle","right","top","ChartWidget","height","xAxis","customOptions","card","extra","direction","bodyClass","options","getChartTypeDefaultOption","isMobile","window","innerWidth","setLegendOffset","chartRef","current","lengend","querySelectorAll","style","marginRight","extraRef","offsetWidth","DIR_RTL","left","justifyContent","padding","useEffect","useRef","renderChart","onResize","setTimeout","className","ref","defaultProps","useBreakpoint","Grid","mapColor","getHighlightedRegion","name","data","length","i","elm","getRegionHoverColor","utils","shadeColor","MapChart","setTooltipContent","mapSource","mapType","transform","projectionConfig","scale","geography","geographies","map","geo","geoName","properties","NAME_1","onMouseEnter","value","getRegionValue","onMouseLeave","hover","outline","rsmKey","Map","props","useState","content","setContent","renderDataList","RegiondataWidget","list","getBreakPoint","includes","bodyStyle","xs","sm","md","lg","minHeight","WorldMap","defaultOption","Chart","DonutChartWidget","regionData","pagesViewData","url","amount","sessionColor","sessionData","sessionLabels","conbinedSessionData","arr","jointSessionData","socialMediaReferralData","percentage","uniqueVisitorsDataDay","uniqueVisitorsDataWeek","uniqueVisitorsDataMonth","socialMediaReferralIcon","FacebookFilled","TwitterSquareFilled","YoutubeFilled","LinkedinFilled","DribbbleSquareFilled","Option","Select","rederRegionTopEntrance","src","AnalyticDashboard","uniqueVisitorsData","setUniqueVisitorsData","useSelector","state","theme","gutter","xxl","justify","maxWidth","Flex","alignItems","itemLayout","dataSource","renderItem","item","Item","thousandSeparator","displayType","index","getSignNum","ArrowUpOutlined","ArrowDownOutlined","defaultValue","onChange"],"mappings":"6VACaA,EAAU,UAeVC,EAAS,CAhBC,UAkBtBD,EAhBsB,UACA,UACA,UACA,UACA,WAiCVE,EAA6B,CACzCC,MAAO,CACNC,KAAM,CACLC,SAAS,GAEVC,QAAS,CACRC,MAAM,IAGRC,OAAO,GAAD,OAAMP,GACZQ,WAAY,CACXJ,SAAS,GAEVK,OAAQ,CACPC,MAAO,EACPC,MAAO,SACPC,QAAS,SAEVC,OAAQ,CACPC,SAAU,MACVC,gBAAiB,QACjBC,SAAU,GACVC,WAAY,CACXC,SAAU,IAEXC,sBAAuB,SAASC,EAAKC,GACpC,OAAOD,EAAM,MAAQC,EAAKC,EAAEC,QAAQC,OAAOH,EAAKI,aAAaJ,EAAKK,kBAGpEC,MAAO,CACNC,WAAY,IAEbC,KAAM,CACLF,MAAO,CACNG,MAAO,CACNxB,MAAM,IAGNyB,MAAO,CACRD,MAAO,CACLxB,MAAM,MAME0B,EAA0B,eAAO/B,GAEjCgC,EAA4B,CACxC/B,MAAO,CACNC,KAAM,CACLC,SAAS,GAEVC,QAAS,CACRC,MAAM,IAGR4B,YAAa,CACZC,IAAK,CACJC,YAAY,EACZC,YAAa,OACbC,eAAgB,UAChBC,YAAa,YAGfhC,OAAO,GAAD,OAAMP,GACZQ,WAAY,CACXJ,SAAS,GAEVK,OAAQ,CACPH,MAAM,EACNI,MAAO,EACPC,MAAO,SACPJ,OAAQ,CAAC,gBAEVM,OAAQ,CACPC,SAAU,MACVC,gBAAiB,QACjBC,SAAU,GACVwB,cAAc,EACdvB,WAAY,CACXC,SAAU,IAEXC,sBAAuB,SAASC,EAAKC,GACpC,OAAOD,EAAM,MAAQC,EAAKC,EAAEC,QAAQC,OAAOH,EAAKI,aAAaJ,EAAKK,kBAGpEC,MAAO,CACNC,WAAY,IAEba,KAAM,CACLC,QAAS,GAEVC,QAAS,CACRC,EAAG,CACFC,UAAW,SAAAzB,GAAG,gBAAQA,OAKZ0B,EAA4B,CACxCvC,OAAO,GAAD,OAAMP,GACZkC,YAAa,CACZa,IAAK,CACJC,KAAM,GACLC,MAAO,CACPC,OAAQ,CACP5C,MAAM,EACN6C,MAAO,CACN7C,MAAM,EACN8C,YAAY,EACZC,MAAO,GACPC,SAAU,OACVC,WAAY,SACZC,WAAY,OACZC,MAAO,UACPZ,UAAW,SAAUvB,GACpB,OAAOA,EAAEC,QAAQmC,aAAaC,QAAO,SAACC,EAAGC,GACxC,OAAOD,EAAIC,IACT,MAINb,KAAM,SAITE,OAAQ,GACR1C,WAAY,CACXJ,SAAS,GAEVS,OAAQ,CACPP,MAAM,IAIKwD,EAAiC,CAC7C5D,MAAO,CACN6D,KAAM,OACNC,UAAW,CACV5D,SAAS,IAGXK,OAAQ,CACPC,MAAO,EACPC,MAAO,UAERgC,QAAS,CACRsB,MAAO,CACJ7D,SAAS,GAEZ8D,EAAG,CACA5D,MAAM,GAETsC,EAAG,CACFuB,MAAO,CACNtB,UAAW,SAAUuB,GACpB,MAAO,MAIVC,OAAQ,CACN/D,MAAM,M,gHC7LJgE,EAAa,CAClBxD,SAAU,WACVyD,OAAQ,KAGHC,EAAY,CACjB1D,SAAU,WACVyD,OAAQ,IACRE,MAAO,IACPC,IAAK,QAgBAC,EAAc,SAAC,GAAoG,IAAnGR,EAAkG,EAAlGA,MAAO3C,EAA2F,EAA3FA,OAAQd,EAAmF,EAAnFA,MAAOkE,EAA4E,EAA5EA,OAAQC,EAAoE,EAApEA,MAAOC,EAA6D,EAA7DA,cAAeC,EAA8C,EAA9CA,KAAMhB,EAAwC,EAAxCA,KAAMiB,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,UAAWC,EAAgB,EAAhBA,UACnGC,EAd6B,SAAApB,GACjC,OAAQA,GAOP,QACC,OAAO9D,IALR,IAAK,MACJ,OAAOgC,IACR,IAAK,OACJ,OAAOD,KAOKoD,CAA0BrB,GAClCsB,EAAWC,OAAOC,WAAa,IAC/BC,EAAkB,WACvB,GAAGC,EAASC,QAAS,CAAC,IAAD,EACdC,EAAUF,EAASC,QAAQE,iBAAiB,yBAAyB,GAC3ED,EAAQE,MAAMC,YAAd,UAA+BT,EAAW,EAAH,UAAOU,EAASL,eAAhB,aAAO,EAAkBM,YAAhE,MACGf,IAAcgB,MAChBN,EAAQE,MAAMpB,MAAQ,OACtBkB,EAAQE,MAAMK,KAAO,KAElBb,IACHM,EAAQE,MAAM/E,SAAW,WACzB6E,EAAQE,MAAMnB,IAAM,EACpBiB,EAAQE,MAAMM,eAAiB,QAC/BR,EAAQE,MAAMO,QAAU,KAK3BC,qBAAU,WACTb,MAEE,IAEH,IAAMO,EAAWO,iBAAO,MAClBb,EAAWa,mBAEjBnB,EAAQxD,MAAMC,WAAaiD,EACxBC,IACFK,EAAO,2BAAOA,GAAYL,IAG3B,IAMMyB,EAAc,kBACnB,cAAC,IAAD,CAAqBC,cANrBC,YAAW,WACVjB,MACE,KAIH,SACC,qBAAKK,MAAOZ,IAAcgB,IAAU,CAAChB,UAAW,OAAQ,GAAIyB,UAAU,WAAWC,IAAKlB,EAAtF,SACC,cAAC,IAAD,CAAWN,QAASA,EAASpB,KAAMA,EAAMvC,OAAQA,EAAQd,MAAOA,EAAOkE,OAAQA,SAKlF,OACC,mCACEG,EACA,cAAC,IAAD,UACC,sBAAK2B,UAAS,4BAAuBxB,GAArC,UACE,qBAAKW,MAAQR,EAAwB,GAAbf,EAAxB,SAA0CH,KAAgB,oBAAIuC,UAAU,mBAAmBb,MAAQR,EAAwB,GAAbf,EAApD,SAAsEH,IAChIa,GAAS,qBAAK2B,IAAKZ,EAAUF,MAAQR,EAAwB,GAAbb,EAAvC,SAAyDQ,IAClEuB,SAIHA,OA4BJ5B,EAAYiC,aAAe,CAC1BpF,OAAQ,GACRoD,OAAQ,IACRlE,MAAO,OACPqE,MAAM,EACNhB,KAAM,QAGQY,O,u91GCvHPkC,EAAkBC,IAAlBD,cAEFE,EAAW,UAGXC,EAAuB,SAACC,EAAMC,GACnC,GAAGA,EAAKC,OAAS,GAAKF,EAAM,CAC3B,IAAK,IAAIG,EAAI,EAAGA,EAAIF,EAAKC,OAAQC,IAAK,CACrC,IAAMC,EAAMH,EAAKE,GACjB,GAAGH,IAASI,EAAIJ,KACf,OAAOI,EAAI5D,MAGb,OAAOsD,EAER,OAAOA,GAGFO,EAAsB,SAACL,EAAMC,GAClC,GAAGA,EAAKC,OAAS,GAAKF,EAAM,CAC3B,IAAK,IAAIG,EAAI,EAAGA,EAAIF,EAAKC,OAAQC,IAAK,CACrC,IAAMC,EAAMH,EAAKE,GACjB,GAAGH,IAASI,EAAIJ,KACf,OAAOM,IAAMC,WAAWH,EAAI5D,OApBR,IAuBtB,OAAO8D,IAAMC,WAAWT,GAvBF,IAyBvB,OAAOQ,IAAMC,WAAWT,GAzBD,KAyClBU,EAAW,SAAC,GAAqD,IAAnDC,EAAkD,EAAlDA,kBAAmBR,EAA+B,EAA/BA,KAAMS,EAAyB,EAAzBA,UAAWC,EAAc,EAAdA,QACrD,OACD,cAAC,gBAAD,CAAe/B,MAAO,CAACgC,UAAU,GAAD,OAAiB,UAAZD,EAAsB,mBAAqB,SAAW,WAAS,GAAGhD,OAAQ,IAAKkD,iBAAkB,CAAEC,MAAO,KAA/I,SACC,cAAC,cAAD,CAAaC,UAAWL,EAAxB,SACE,qBAAGM,YACSC,KAAI,SAAAC,GACf,IAAMC,EAAsB,UAAZR,EAAsBO,EAAIE,WAAWpB,KAAOkB,EAAIE,WAAWC,OAC3E,OACC,cAAC,YAAD,CAECN,UAAWG,EACXI,aAAc,WACbb,EAzBc,SAACT,EAAMC,GAC7B,GAAGA,EAAKC,OAAS,GAAKF,EAAM,CAC3B,IAAK,IAAIG,EAAI,EAAGA,EAAIF,EAAKC,OAAQC,IAAK,CACrC,IAAMC,EAAMH,EAAKE,GACjB,GAAGH,IAASI,EAAIJ,KACf,MAAM,GAAN,OAAUI,EAAIJ,KAAd,mBAAwBI,EAAImB,OAG9B,MAAO,GAER,MAAO,GAemBC,CAAeL,EAASlB,KAE3CwB,aAAc,WACbhB,EAAkB,KAEnBjF,KAAMuE,EAAqBoB,EAASlB,GACpCzG,OAAO,UACPoF,MAAO,CACN8C,MAAO,CACNlG,KAAM6E,EAAoBc,EAASlB,GACnC0B,QAAS,UAbNT,EAAIU,iBAyBXC,EAAM,SAAAC,GACX,IAAQ7B,EAA6B6B,EAA7B7B,KAAMS,EAAuBoB,EAAvBpB,UAAWC,EAAYmB,EAAZnB,QACzB,EAA8BoB,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,OACG,qCACE,cAAC,EAAD,CAAUhC,KAAMA,EAAMS,UAAWA,EAAWC,QAASA,EAASF,kBAAmBwB,IACjF,cAAC,IAAD,UAAeD,QAKfE,EAAiB,SAAAjC,GAUtB,OATaA,EAAKgB,KAAI,SAAAb,GAAG,OACxB,sBAAKX,UAAU,yDAAf,UACC,gCACC,cAAC,IAAD,CAAOjD,MAAO4D,EAAI5D,QAClB,sBAAMiD,UAAU,kBAAhB,SAAmCW,EAAIJ,UAExC,sBAAMP,UAAU,6BAAhB,SAA8CW,EAAImB,UAL0BnB,EAAIJ,UAWtEmC,EAAmB,SAAAL,GAC/B,IAAQ7B,EAAmD6B,EAAnD7B,KAAMS,EAA6CoB,EAA7CpB,UAAWC,EAAkCmB,EAAlCnB,QAASzD,EAAyB4E,EAAzB5E,MAAO8E,EAAkBF,EAAlBE,QAASI,EAASN,EAATM,KAC5ChE,GAAYkC,IAAM+B,cAAczC,KAAiB0C,SAAS,MAChE,OACC,cAAC,IAAD,CAAMC,UAAW,CAACpD,QAAS,GAA3B,SACC,eAAC,IAAD,WACC,cAAC,IAAD,CAAKqD,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAGlD,UAAU,eAA9C,SACC,sBAAKA,UAAU,uDAAf,UACC,8BAAMvC,GAAS,oBAAIuC,UAAU,mBAAd,SAAkCvC,MACjD,8BAAM8E,IACN,8BAAMI,GAAcF,EAAejC,UAGrC,cAAC,IAAD,CAAKuC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAjC,SACC,qBAAKlD,UAAU,4CAA4Cb,MAAO,CAACgE,UAAWxE,EAAW,IAAM,KAA/F,SACC,qBAAKqB,UAAU,YAAf,SACC,cAAC,EAAD,CAAKQ,KAAMA,EAAMS,UAAWA,EAAWC,QAASA,gBAkBvDwB,EAAiBxC,aAAe,CAC/BM,KAAM,GACNS,UAzIcmC,EA0IdlC,QAAS,SAGKwB,Q,2BCpJTW,EAAgBjH,IAEhBkH,EAAQ,SAAAjB,GACb,OACC,cAAC,IAAD,eAAeA,KAIXkB,EAAmB,SAAAlB,GACxB,IAAQvH,EAA0EuH,EAA1EvH,OAAQsD,EAAkEiE,EAAlEjE,cAAe5B,EAAmD6F,EAAnD7F,OAAQxC,EAA2CqI,EAA3CrI,MAAOkE,EAAoCmE,EAApCnE,OAAQT,EAA4B4E,EAA5B5E,MAAOa,EAAqB+D,EAArB/D,MAAOE,EAAc6D,EAAd7D,UAChEC,EAAU4E,EASd,OARA5E,EAAQjC,OAASA,EACjBiC,EAAQjD,YAAYa,IAAIE,MAAMC,OAAOC,MAAME,MAAQc,EAC/CA,IACHgB,EAAQjD,YAAYa,IAAIE,MAAMC,OAAO5C,MAAO,GAE1CwE,IACFK,EAAO,2BAAOA,GAAYL,IAG1B,cAAC,IAAD,UACC,sBAAK4B,UAAS,sBAAiBxB,GAA/B,UACC,cAAC,EAAD,CAAOnB,KAAK,QAAQoB,QAASA,EAAS3D,OAAQA,EAAQd,MAAOA,EAAOkE,OAAQA,IAC3EI,QAcLiF,EAAiBrD,aAAe,CAC/BpF,OAAQ,GACR0B,OAAQ,GACRiB,MAAO,GACPS,OAAQ,IACRlE,MAAO,QAGOuJ,Q,mGCjDFC,EAAa,CACzB,CACCzG,MAAO,UACPwD,KAAM,uBACNuB,MAAO,UAEN,CACD/E,MAAO,UACPwD,KAAM,SACNuB,MAAO,UAEN,CACD/E,MAAO,UACPwD,KAAM,QACNuB,MAAO,UAEN,CACD/E,MAAO,UACPwD,KAAM,QACNuB,MAAO,SAER,CACC/E,MAAO,UACPwD,KAAM,WACNuB,MAAO,SAER,CACC/E,MAAO,UACPwD,KAAM,WACNuB,MAAO,UAII2B,EAAgB,CAC5B,CACGhG,MAAO,OACPiG,IAAI,SACJC,OAAQ,MAEV,CACElG,MAAO,aACPiG,IAAI,cACJC,OAAQ,MAEV,CACElG,MAAO,eACPiG,IAAK,gBACLC,OAAQ,MAEV,CACElG,MAAO,kBACPiG,IAAK,mBACLC,OAAQ,MAEV,CACElG,MAAO,UACPiG,IAAK,WACLC,OAAQ,OAICC,EAAe,CAACtK,IAAO,GAAIA,IAAO,GAAIA,IAAO,IAC7CuK,EAAc,CAAC,KAAM,KAAM,MAC3BC,EAAgB,CAAC,mBAAoB,YAAa,0BAelDC,EAdY,WAExB,IADA,IAAIC,EAAM,GACDtD,EAAI,EAAGA,EAAImD,EAAYpD,OAAQC,IAAK,CAC5C,IAAMF,EAAOqD,EAAYnD,GACnB/D,EAAQmH,EAAcpD,GACtB3D,EAAQ6G,EAAalD,GAC3BsD,EAAG,sBAAOA,GAAP,CAAY,CACdxD,KAAMA,EACN7D,MAAOA,EACPI,MAAOA,KAGT,OAAOiH,EAE2BC,GAEtBC,EAA0B,CACtC,CACCzG,MAAO,WACP+C,KAAO,CAAC,CACPA,KAAM,CAAC,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,MAE/B2D,WAAY,KACZR,OAAQ,KAET,CACClG,MAAO,UACP+C,KAAO,CAAC,CACPA,KAAM,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,MAE3B2D,WAAY,KACZR,OAAQ,KAET,CACClG,MAAO,UACP+C,KAAO,CAAC,CACPA,KAAM,CAAC,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,MAE9B2D,YAAa,IACbR,OAAQ,KAET,CACClG,MAAO,WACP+C,KAAO,CAAC,CACPA,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MAEhC2D,WAAY,KACZR,OAAQ,KAET,CACClG,MAAO,WACP+C,KAAO,CAAC,CACPA,KAAM,CAAC,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MAE/C2D,YAAa,KACbR,OAAQ,KAIGS,GAAwB,CACpCtJ,OAAQ,CACN,CACAyF,KAAM,mBACNC,KAAM,CAAC,GAAI,EAAG,EAAG,KAEjB,CACAD,KAAM,aACNC,KAAM,CAAC,EAAG,EAAG,GAAI,MAGnBtF,WAAW,CACT,WACD,UACA,WACA,YAIWmJ,GAAyB,CACrCvJ,OAAQ,CACN,CACAyF,KAAM,mBACNC,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAE/B,CACAD,KAAM,aACNC,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MAGjCtF,WAAW,CACT,SACA,SACA,SACA,SACA,SACA,SACA,WAIUoJ,GAA0B,CACtCxJ,OAAQ,CACN,CACAyF,KAAM,mBACNC,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAE3C,CACAD,KAAM,aACNC,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MAG7CtF,WAAW,CACV,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,W,SCvJIqJ,GAA0B,CAC9B,cAACC,EAAA,EAAD,CAAgBrF,MAAO,CAAEpC,MAAO,aAChC,cAAC0H,EAAA,EAAD,CAAqBtF,MAAO,CAAEpC,MAAO,aACrC,cAAC2H,EAAA,EAAD,CAAevF,MAAO,CAAEpC,MAAO,UAC/B,cAAC4H,EAAA,EAAD,CAAgBxF,MAAO,CAAEpC,MAAO,aAChC,cAAC6H,EAAA,EAAD,CAAsBzF,MAAO,CAAEpC,MAAO,cAGhC8H,GAAWC,IAAXD,OAEFE,GACJ,sBAAK/E,UAAU,OAAf,UACE,sBAAKA,UAAU,4BAAf,UACE,cAAC,IAAD,CAAQ1D,KAAM,GAAI0I,IAAI,uBACtB,oBAAIhF,UAAU,6BAAd,uBAEF,sBAAMA,UAAU,aAAhB,oCAISiF,GAAoB,WAC/B,MAAoD3C,mBAClD+B,IADF,mBAAOa,EAAP,KAA2BC,EAA3B,KAGQ5G,EAAc6G,cAAY,SAACC,GAAD,OAAWA,EAAMC,SAA3C/G,UAmBR,OACE,qCACE,eAAC,IAAD,CAAKgH,OAAQ,GAAb,UACE,cAAC,IAAD,CAAKxC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIsC,IAAK,GAA1C,SACE,cAAC,EAAD,CACE/H,MAAM,qBACN+C,KAAMgD,EACNjB,QAASwC,OAGb,cAAC,IAAD,CAAKhC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIsC,IAAK,EAA1C,SACE,cAAC,EAAD,CACE1K,OAAQ+I,EACRrH,OAAQsH,EACRrG,MAAM,iBACNe,UAAU,OACVJ,cAAe,CAAEvE,OAAQ+J,GACzBtF,MACE,cAAC,IAAD,CAAKmH,QAAQ,SAAb,SACE,cAAC,IAAD,CAAK1C,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAjC,SACE,qBAAKlD,UAAU,eAAeb,MAAO,CAAEuG,SAAU,KAAjD,SACG3B,EAAoBvC,KAAI,SAACb,GAAD,OACvB,eAACgF,EAAA,EAAD,CACEC,WAAW,SACXnG,eAAe,UACfO,UAAU,OAHZ,UAME,gCACE,cAAC,IAAD,CAAOjD,MAAO4D,EAAI5D,QAClB,sBAAMiD,UAAU,kBAAhB,SAAmCW,EAAIhE,WAEzC,sBAAMqD,UAAU,6BAAhB,SACGW,EAAIH,SAPFG,EAAIhE,uBAkB3B,eAAC,IAAD,CAAK4I,OAAQ,GAAb,UACE,cAAC,IAAD,CAAKxC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIsC,IAAK,EAA1C,SACE,cAAC,IAAD,CAAM/H,MAAM,qBAAZ,SACE,cAAC,IAAD,CACEoI,WAAW,aACXC,WAAYrC,EACZsC,WAAY,SAACC,GAAD,OACV,cAAC,IAAKC,KAAN,UACE,sBAAKjG,UAAU,0DAAf,UACE,gCACE,oBAAIA,UAAU,wBAAd,SAAuCgG,EAAKvI,QAC5C,sBAAMuC,UAAU,aAAhB,SAA8BgG,EAAKtC,SAErC,8BACE,cAAC,IAAD,CAAK3G,MAAM,OAAX,SACE,sBAAMiD,UAAU,mBAAhB,SACE,cAAC,IAAD,CACE8B,MAAOkE,EAAKrC,OACZuC,mBAAmB,EACnBC,YAAY,2BAWhC,cAAC,IAAD,CAAKpD,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIsC,IAAK,EAA1C,SACE,cAAC,IAAD,CAAM/H,MAAM,yBAAZ,SACE,cAAC,IAAD,CACEoI,WAAW,aACXC,WAAY5B,EACZ6B,WAAY,SAACC,EAAMI,GAAP,OACV,cAAC,IAAKH,KAAN,UACE,sBAAKjG,UAAU,0DAAf,UACE,sBAAKA,UAAU,4BAAf,UACE,sBAAMA,UAAU,gBAAhB,SACGuE,GAAwB6B,KAE3B,sBAAKpG,UAAU,OAAf,UACE,oBAAIA,UAAU,wBAAd,SAAuCgG,EAAKvI,QAC5C,uBAAMuC,UAAU,aAAhB,mBACS,IACP,sBAAMA,UAAU,mBAAhB,SACGgG,EAAKrC,kBAKd,sBAAK3D,UAAU,4BAAf,UACE,cAAC,IAAD,CACEvB,QAAO,2BACFrB,KACA,CACDvD,OAAQ,CACNgH,IAAMwF,WACJL,EAAK7B,WACL7K,IAAO,GACPA,IAAO,OAKfwB,OAAQkL,EAAKxF,KACbtC,OAAQ,GACRlE,MAAO,KAET,uBAAMgG,UAAU,wBAAhB,UACGgG,EAAK7B,WADR,OAGA,sBACEnE,UAAS,eAAUa,IAAMwF,WACvBL,EAAK7B,WACL,eACA,gBAJJ,SAOGtD,IAAMwF,WACLL,EAAK7B,WACL,cAACmC,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,sBAUlB,cAAC,IAAD,CAAKxD,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIsC,IAAK,GAA1C,SACE,cAACvH,EAAA,EAAD,CACEnD,OAAQoK,EAAmBpK,OAC3BqD,MAAO+G,EAAmBhK,WAC1BuC,MAAM,kBACNS,OAAQ,IACRb,KAAK,MACLkB,UAAWA,EACXH,cAAe,CACbvE,OAAQ,CAACP,IAAO,GAAIA,IAAO,KAE7BgF,MACE,eAAC,IAAD,CACEkI,aAAa,OACblK,KAAK,QACL6C,MAAO,CAAEnF,MAAO,KAChByM,SA1KoB,SAAC3E,GACjC,OAAQA,GACN,IAAK,MACHqD,EAAsBf,IACtB,MAOF,QACEe,EAAsBd,IACtB,MALF,IAAK,QACHc,EAAsBb,MA6JhB,UAME,cAACO,GAAD,CAAQ/C,MAAM,MAAd,iBACA,cAAC+C,GAAD,CAAQ/C,MAAM,OAAd,kBACA,cAAC+C,GAAD,CAAQ/C,MAAM,QAAd,iCAUDmD","file":"static/js/20.f80f0526.chunk.js","sourcesContent":["export const COLOR_1 = '#3e82f7';  // blue\r\nexport const COLOR_2 = '#04d182';  // cyan\r\nexport const COLOR_3 = '#ff6b72';  // volcano\r\nexport const COLOR_4 = '#ffc107';  // gold\r\nexport const COLOR_5 = '#a461d8';  // purple\r\nexport const COLOR_6 = '#fa8c16';  // orange\r\nexport const COLOR_7 = '#17bcff';  // geekblue\r\n\r\nexport const COLOR_1_LIGHT = 'rgba(62, 130, 247, 0.15)';\r\nexport const COLOR_2_LIGHT = 'rgba(4, 209, 130, 0.1)';\r\nexport const COLOR_3_LIGHT = 'rgba(222, 68, 54, 0.1)';\r\nexport const COLOR_4_LIGHT = 'rgba(255, 193, 7, 0.1)';\r\nexport const COLOR_5_LIGHT = 'rgba(139, 75, 157, 0.1)';\r\nexport const COLOR_6_LIGHT = 'rgba(250, 140, 22, .1)';\r\nexport const COLOR_7_LIGHT = 'rgba(23, 188, 255, 0.15)';\r\n\r\nexport const COLORS = [\r\n\tCOLOR_1,\r\n\tCOLOR_2,\r\n\tCOLOR_3,\r\n\tCOLOR_4,\r\n\tCOLOR_5,\r\n\tCOLOR_6,\r\n\tCOLOR_7\r\n]\r\n\r\nexport const COLORS_LIGHT = [\r\n\tCOLOR_1_LIGHT,\r\n\tCOLOR_2_LIGHT,\r\n\tCOLOR_3_LIGHT,\r\n\tCOLOR_4_LIGHT,\r\n\tCOLOR_5_LIGHT,\r\n\tCOLOR_6_LIGHT,\r\n\tCOLOR_7_LIGHT\r\n]\r\n\r\nexport const COLOR_AXES = '#edf2f9';\r\nexport const COLOR_TEXT = '#455560';\r\n\r\nexport const apexLineChartDefaultOption = {\r\n\tchart: {\r\n\t\tzoom: {\r\n\t\t\tenabled: false\r\n\t\t},\r\n\t\ttoolbar: {\r\n\t\t\tshow: false\r\n\t\t}\r\n\t},\r\n\tcolors: [...COLORS],\r\n\tdataLabels: {\r\n\t\tenabled: false\r\n\t},\r\n\tstroke: {\r\n\t\twidth: 3,\r\n\t\tcurve: 'smooth',\r\n\t\tlineCap: 'round'\r\n\t},\r\n\tlegend: {\r\n\t\tposition: 'top',\r\n\t\thorizontalAlign: 'right',\r\n\t\toffsetY: -15,\r\n\t\titemMargin: {\r\n\t\t\tvertical: 20\r\n\t\t},\r\n\t\ttooltipHoverFormatter: function(val, opts) {\r\n\t\t\treturn val + ' - ' + opts.w.globals.series[opts.seriesIndex][opts.dataPointIndex] + ''\r\n\t\t}\r\n\t},\r\n\txaxis: {\r\n\t\tcategories: [],\r\n\t},\r\n\tgrid: {\r\n\t\txaxis: {\r\n\t\t\tlines: {\r\n\t\t\t\tshow: true,\r\n\t\t\t}\r\n\t\t},\r\n\t\t  yaxis: {\r\n\t\t\tlines: {\r\n\t\t\t  show: false,\r\n\t\t\t}\r\n\t\t},\r\n\t}\r\n}\r\n\r\nexport const apexAreaChartDefaultOption = {...apexLineChartDefaultOption}\r\n\r\nexport const apexBarChartDefaultOption = {\r\n\tchart: {\r\n\t\tzoom: {\r\n\t\t\tenabled: false\r\n\t\t},\r\n\t\ttoolbar: {\r\n\t\t\tshow: false\r\n\t\t}\r\n\t},\r\n\tplotOptions: {\r\n\t\tbar: {\r\n\t\t\thorizontal: false,\r\n\t\t\tcolumnWidth: '25px',\r\n\t\t\tstartingShapre: 'rounded',\r\n\t\t\tendingShape: 'rounded'\r\n\t\t},\r\n\t},\r\n\tcolors: [...COLORS],\r\n\tdataLabels: {\r\n\t\tenabled: false\r\n\t},\r\n\tstroke: {\r\n\t\tshow: true,\r\n\t\twidth: 6,\r\n\t\tcurve: 'smooth',\r\n\t\tcolors: ['transparent']\r\n\t},\r\n\tlegend: {\r\n\t\tposition: 'top',\r\n\t\thorizontalAlign: 'right',\r\n\t\toffsetY: -15,\r\n\t\tinverseOrder: true,\r\n\t\titemMargin: {\r\n\t\t\tvertical: 20\r\n\t\t},\r\n\t\ttooltipHoverFormatter: function(val, opts) {\r\n\t\t\treturn val + ' - ' + opts.w.globals.series[opts.seriesIndex][opts.dataPointIndex] + ''\r\n\t\t}\r\n\t},\r\n\txaxis: {\r\n\t\tcategories: [],\r\n\t},\r\n\tfill: {\r\n\t\topacity: 1\r\n\t},\r\n\ttooltip: {\r\n\t\ty: {\r\n\t\t\tformatter: val => (`${val}`)\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport const apexPieChartDefaultOption = {\r\n\tcolors: [...COLORS],\r\n\tplotOptions: {\r\n\t\tpie: {\r\n\t\t\tsize: 50,\r\n\t\t  donut: {\r\n\t\t\t\tlabels: {\r\n\t\t\t\t\tshow: true,\r\n\t\t\t\t\ttotal: {\r\n\t\t\t\t\t\tshow: true,\r\n\t\t\t\t\t\tshowAlways: true,\r\n\t\t\t\t\t\tlabel: '',\r\n\t\t\t\t\t\tfontSize: '18px',\r\n\t\t\t\t\t\tfontFamily: 'Roboto',\r\n\t\t\t\t\t\tfontWeight: 'bold',\r\n\t\t\t\t\t\tcolor: '#1a3353',\r\n\t\t\t\t\t\tformatter: function (w) {\r\n\t\t\t\t\t\t\treturn w.globals.seriesTotals.reduce((a, b) => {\r\n\t\t\t\t\t\t\t\treturn a + b\r\n\t\t\t\t\t\t\t}, 0)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tsize: '87%'\r\n\t\t  }\r\n\t\t}\r\n\t},\r\n\tlabels: [],\r\n\tdataLabels: {\r\n\t\tenabled: false\r\n\t},\r\n\tlegend: {\r\n\t\tshow: false\r\n\t}\r\n}\r\n\r\nexport const apexSparklineChartDefultOption = {\r\n\tchart: {\r\n\t\ttype: 'line',\r\n\t\tsparkline: {\r\n\t\t\tenabled: true\r\n\t\t}\r\n\t},\r\n\tstroke: {\r\n\t\twidth: 2,\r\n\t\tcurve: 'smooth'\r\n\t},\r\n\ttooltip: {\r\n\t\tfixed: {\r\n\t\t  \tenabled: false\r\n\t\t},\r\n\t\tx: {\r\n\t\t  \tshow: false\r\n\t\t},\r\n\t\ty: {\r\n\t\t\ttitle: {\r\n\t\t\t\tformatter: function (seriesName) {\r\n\t\t\t\t\treturn ''\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tmarker: {\r\n\t\t  show: false\r\n\t\t}\r\n\t}\r\n}","import React, { useRef, useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Card } from 'antd';\r\nimport ApexChart from \"react-apexcharts\";\r\nimport { \r\n\tapexLineChartDefaultOption, \r\n\tapexBarChartDefaultOption,\r\n\tapexAreaChartDefaultOption\r\n} from 'constants/ChartConstant';\r\nimport ReactResizeDetector from 'react-resize-detector';\r\nimport { DIR_RTL } from 'constants/ThemeConstant';\r\n\r\nconst titleStyle = {\r\n\tposition: 'absolute',\r\n\tzIndex: '1'\r\n}\r\n\r\nconst extraStyle ={\r\n\tposition: 'absolute',\r\n\tzIndex: '1',\r\n\tright: '0',\r\n\ttop: '-2px'\r\n}\r\n\r\nconst getChartTypeDefaultOption = type => {\r\n\tswitch (type) {\r\n\t\tcase 'line':\r\n\t\t\treturn apexLineChartDefaultOption\r\n\t\tcase 'bar':\r\n\t\t\treturn apexBarChartDefaultOption\r\n\t\tcase 'area':\r\n\t\t\treturn apexAreaChartDefaultOption\r\n\t\tdefault:\r\n\t\t\treturn apexLineChartDefaultOption;\r\n\t}\r\n}\r\n\r\nconst ChartWidget = ({title, series, width, height, xAxis, customOptions, card, type, extra, direction, bodyClass}) =>  {\r\n\tlet options = getChartTypeDefaultOption(type)\r\n\tconst isMobile = window.innerWidth < 768 \r\n\tconst setLegendOffset = () => {\r\n\t\tif(chartRef.current) {\r\n\t\t\tconst lengend = chartRef.current.querySelectorAll('div.apexcharts-legend')[0]\r\n\t\t\tlengend.style.marginRight = `${isMobile ? 0 : extraRef.current?.offsetWidth}px`\r\n\t\t\tif(direction === DIR_RTL) {\r\n\t\t\t\tlengend.style.right = 'auto'\r\n\t\t\t\tlengend.style.left = '0'\r\n\t\t\t}\r\n\t\t\tif (isMobile) {\r\n\t\t\t\tlengend.style.position = 'relative'\r\n\t\t\t\tlengend.style.top = 0\r\n\t\t\t\tlengend.style.justifyContent = 'start';\r\n\t\t\t\tlengend.style.padding = 0;\r\n\t\t\t}\r\n\t\t}\r\n\t} \r\n\r\n\tuseEffect(() => {\r\n\t\tsetLegendOffset()\r\n\t\r\n\t}, [])\r\n\t\r\n\tconst extraRef = useRef(null);\r\n\tconst chartRef = useRef();\r\n\t\r\n\toptions.xaxis.categories = xAxis\r\n\tif(customOptions) {\r\n\t\toptions = {...options, ...customOptions }\r\n\t}\r\n\t\r\n\tconst onResize = () => {\r\n\t\tsetTimeout(() => {\r\n\t\t\tsetLegendOffset()\t\r\n\t\t}, 600);\r\n\t}\r\n\r\n\tconst renderChart = () => (\r\n\t\t<ReactResizeDetector onResize={onResize()}>\r\n\t\t\t<div style={direction === DIR_RTL ? {direction: 'ltr'}: {}} className=\"chartRef\" ref={chartRef}>\r\n\t\t\t\t<ApexChart options={options} type={type} series={series} width={width} height={height}/>\r\n\t\t\t</div>\r\n\t\t</ReactResizeDetector>\r\n\t)\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{card ? \r\n\t\t\t\t<Card >\r\n\t\t\t\t\t<div className={`position-relative ${bodyClass}`}>\r\n\t\t\t\t\t\t{<div style={!isMobile ? titleStyle : {}}>{title}</div> && <h4 className=\"font-weight-bold\" style={!isMobile ? titleStyle : {}}>{title}</h4>}\r\n\t\t\t\t\t\t{extra && <div ref={extraRef} style={!isMobile ? extraStyle : {}}>{extra}</div>}\r\n\t\t\t\t\t\t{renderChart()}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Card> \r\n\t\t\t\t: \r\n\t\t\t\trenderChart()\r\n\t\t\t}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nChartWidget.propTypes = {\r\n\ttitle: PropTypes.oneOfType([\r\n\t\tPropTypes.string,\r\n\t\tPropTypes.element\r\n\t]),\r\n\tseries: PropTypes.array.isRequired,\r\n\txAxis: PropTypes.array,\r\n\tcustomOptions: PropTypes.object,\r\n\twidth: PropTypes.oneOfType([\r\n\t\tPropTypes.string,\r\n\t\tPropTypes.number\r\n\t]),\r\n\theight: PropTypes.oneOfType([\r\n\t\tPropTypes.string,\r\n\t\tPropTypes.number\r\n\t]),\r\n\tcard: PropTypes.bool,\r\n\ttype: PropTypes.string,\r\n\textra: PropTypes.element,\r\n\tbodyClass: PropTypes.string\r\n}\r\n\r\nChartWidget.defaultProps = {\r\n\tseries: [],\r\n\theight: 300,\r\n\twidth: '100%',\r\n\tcard: true,\r\n\ttype: 'line'\r\n};\r\n\r\nexport default ChartWidget\r\n","import React, { useState } from 'react'\r\nimport { Card, Row, Col, Badge, Grid } from 'antd';\r\nimport PropTypes from 'prop-types'\r\nimport {\r\n  ComposableMap,\r\n  Geographies,\r\n  Geography\r\n} from \"react-simple-maps\";\r\nimport ReactTooltip from 'react-tooltip'\r\nimport WorldMap from 'assets/maps/world-countries-sans-antarctica.json'\r\nimport utils from 'utils'\r\n\r\nconst { useBreakpoint } = Grid;\r\nconst geoUrl = WorldMap;\r\nconst mapColor = '#F5F4F6';\r\nconst hoverPercentage = -10;\r\n\r\nconst getHighlightedRegion = (name, data) => {\r\n\tif(data.length > 0 || name) {\r\n\t\tfor (let i = 0; i < data.length; i++) {\r\n\t\t\tconst elm = data[i];\r\n\t\t\tif(name === elm.name) {\r\n\t\t\t\treturn elm.color\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn mapColor\r\n\t}\r\n\treturn mapColor\r\n}\r\n\r\nconst getRegionHoverColor = (name, data) => {\r\n\tif(data.length > 0 || name) {\r\n\t\tfor (let i = 0; i < data.length; i++) {\r\n\t\t\tconst elm = data[i];\r\n\t\t\tif(name === elm.name) {\r\n\t\t\t\treturn utils.shadeColor(elm.color, hoverPercentage)\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn utils.shadeColor(mapColor, hoverPercentage)\r\n\t}\r\n\treturn utils.shadeColor(mapColor, hoverPercentage)\r\n}\r\n\r\nconst getRegionValue = (name, data) => {\r\n\tif(data.length > 0 || name) {\r\n\t\tfor (let i = 0; i < data.length; i++) {\r\n\t\t\tconst elm = data[i];\r\n\t\t\tif(name === elm.name) {\r\n\t\t\t\treturn `${elm.name} — ${elm.value}`\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn ''\r\n\t}\r\n\treturn ''\r\n}\r\n\r\nconst MapChart = ({ setTooltipContent, data, mapSource, mapType }) => {\r\n  \treturn (\r\n\t\t<ComposableMap style={{transform: `${mapType === 'world' ? 'translateY(20px)' : 'none'}`}} data-tip=\"\" height={380} projectionConfig={{ scale: 145 }}>\r\n\t\t\t<Geographies geography={mapSource}>\r\n\t\t\t\t{({ geographies }) =>\r\n\t\t\t\t\tgeographies.map(geo => {\r\n\t\t\t\t\t\tconst geoName = mapType === 'world' ? geo.properties.name : geo.properties.NAME_1 \r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<Geography\r\n\t\t\t\t\t\t\t\tkey={geo.rsmKey}\r\n\t\t\t\t\t\t\t\tgeography={geo}\r\n\t\t\t\t\t\t\t\tonMouseEnter={() => {\r\n\t\t\t\t\t\t\t\t\tsetTooltipContent(getRegionValue(geoName, data));\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tonMouseLeave={() => {\r\n\t\t\t\t\t\t\t\t\tsetTooltipContent(\"\");\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tfill={getHighlightedRegion(geoName, data)}\r\n\t\t\t\t\t\t\t\tstroke=\"#D6D6DA\"\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\thover: {\r\n\t\t\t\t\t\t\t\t\t\tfill: getRegionHoverColor(geoName, data),\r\n\t\t\t\t\t\t\t\t\t\toutline: \"none\"\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t</Geographies>\r\n\t\t</ComposableMap>\r\n    )\r\n}\r\n\r\nconst Map = props => {\r\n\tconst { data, mapSource, mapType } = props\r\n\tconst [content, setContent] = useState(\"\");\r\n\treturn (\r\n    <>\r\n      <MapChart data={data} mapSource={mapSource} mapType={mapType} setTooltipContent={setContent} />\r\n      <ReactTooltip>{content}</ReactTooltip>\r\n    </>\r\n  );\r\n}\r\n\r\nconst renderDataList = data => {\r\n\tconst list = data.map(elm => (\r\n\t\t<div className=\"d-flex align-items-center justify-content-between mb-3\" key={elm.name}>\r\n\t\t\t<div>\r\n\t\t\t\t<Badge color={elm.color} />\r\n\t\t\t\t<span className=\"text-gray-light\">{elm.name}</span>\r\n\t\t\t</div>\r\n\t\t\t<span className=\"font-weight-bold text-dark\">{elm.value}</span>\r\n\t\t</div>\r\n\t))\r\n\treturn list\r\n}\r\n\r\nexport const RegiondataWidget = props => {\r\n\tconst { data, mapSource, mapType, title, content, list } = props\r\n\tconst isMobile = !utils.getBreakPoint(useBreakpoint()).includes('lg')\r\n\treturn (\r\n\t\t<Card bodyStyle={{padding: 0}}>\r\n\t\t\t<Row>\r\n\t\t\t\t<Col xs={24} sm={24} md={24} lg={7} className=\"border-right\">\r\n\t\t\t\t\t<div className=\"d-flex flex-column p-3 justify-content-between h-100\">\r\n\t\t\t\t\t\t<div>{title && <h4 className=\"font-weight-bold\">{title}</h4>}</div>\r\n\t\t\t\t\t\t<div>{content}</div>\r\n\t\t\t\t\t\t<div>{list ? list : renderDataList(data)}</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col xs={24} sm={24} md={24} lg={17}>\r\n\t\t\t\t\t<div className=\"d-flex flex-column justify-content-center\" style={{minHeight: isMobile ? 200 : 435 }}>\r\n\t\t\t\t\t\t<div className=\"p-3 w-100\" >\r\n\t\t\t\t\t\t\t<Map data={data} mapSource={mapSource} mapType={mapType}/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t</Card>\r\n\t)\r\n}\r\n\r\nRegiondataWidget.propTypes = {\r\n\ttitle: PropTypes.string,\r\n\tdata: PropTypes.array,\r\n\tmapSource: PropTypes.object,\r\n\tmapType: PropTypes.string,\r\n\tcontent: PropTypes.element,\r\n\tlist: PropTypes.element\r\n}\r\n\r\nRegiondataWidget.defaultProps = {\r\n\tdata: [],\r\n\tmapSource: geoUrl,\r\n\tmapType: 'world'\r\n};\r\n\r\nexport default RegiondataWidget","import React from 'react'\r\nimport { Card } from 'antd';\r\nimport ApexChart from \"react-apexcharts\";\r\nimport { apexPieChartDefaultOption } from 'constants/ChartConstant';\r\nimport PropTypes from 'prop-types'\r\n\r\nconst defaultOption = apexPieChartDefaultOption;\r\n\r\nconst Chart = props => {\r\n\treturn (\r\n\t\t<ApexChart {...props} />\r\n\t)\r\n}\r\n\r\nconst DonutChartWidget = props => {\r\n\tconst { series, customOptions, labels, width, height, title, extra, bodyClass } = props\r\n\tlet options = defaultOption\r\n\toptions.labels = labels\r\n\toptions.plotOptions.pie.donut.labels.total.label = title\r\n\tif(!title) {\r\n\t\toptions.plotOptions.pie.donut.labels.show = false\r\n\t}\r\n\tif(customOptions) {\r\n\t\toptions = {...options, ...customOptions }\r\n\t}\r\n\treturn (\r\n\t\t<Card>\r\n\t\t\t<div className={`text-center ${bodyClass}`}>\r\n\t\t\t\t<Chart type=\"donut\" options={options} series={series} width={width} height={height} />\r\n\t\t\t\t{extra}\r\n\t\t\t</div>\r\n\t\t</Card>\r\n\t)\r\n}\r\n\r\nDonutChartWidget.propTypes = {\r\n\tseries: PropTypes.array.isRequired,\r\n\tlabels: PropTypes.array,\r\n\ttitle: PropTypes.string,\r\n\textra: PropTypes.element,\r\n\tbodyClass: PropTypes.string\r\n}\r\n\r\nDonutChartWidget.defaultProps = {\r\n\tseries: [],\r\n\tlabels: [],\r\n\ttitle: '',\r\n\theight: 250,\r\n\twidth: '100%'\r\n};\r\n\r\nexport default DonutChartWidget\r\n","import { COLORS } from 'constants/ChartConstant';\r\n\r\nexport const regionData = [\r\n\t{\r\n\t\tcolor: '#3e82f7',\r\n\t\tname: 'United Arab Emirates',\r\n\t\tvalue: '37.61%'\r\n  \t},\r\n  \t{\r\n\t\tcolor: '#04d182',\r\n\t\tname: 'Brazil',\r\n\t\tvalue: '16.79%'\r\n  \t},\r\n \t {\r\n\t\tcolor: '#ffc542',\r\n\t\tname: 'India',\r\n\t\tvalue: '12.42%'\r\n \t},\r\n  \t{\r\n\t\tcolor: '#fa8c16',\r\n\t\tname: 'China',\r\n\t\tvalue: '9.85%'\r\n\t},\r\n\t{\r\n\t\tcolor: '#ff6b72',\r\n\t\tname: 'Malaysia',\r\n\t\tvalue: '7.68%'\r\n\t},\r\n\t{\r\n\t\tcolor: '#a461d8',\r\n\t\tname: 'Thailand',\r\n\t\tvalue: '5.11%'\r\n\t}\r\n]\r\n\r\nexport const pagesViewData = [\r\n\t{\r\n    title: 'Home',\r\n    url:'/home/',\r\n    amount: 7616\r\n  },\r\n  {\r\n    title: 'Activities',\r\n    url:'/activities',\r\n    amount: 6923\r\n  },\r\n  {\r\n    title: 'Destinations',\r\n    url: '/destinations',\r\n    amount: 5228\r\n  },\r\n  {\r\n    title: 'Discover Meliha',\r\n    url: '/discover-meliha',\r\n    amount: 3512\r\n  },\r\n  {\r\n    title: 'Booking',\r\n    url: '/booking',\r\n    amount: 1707\r\n  }\r\n]\r\n\r\nexport const sessionColor = [COLORS[3], COLORS[0], COLORS[1]]\r\nexport const sessionData = [3561, 1443, 2462]\r\nexport const sessionLabels = [\"Horseback Riding\", \"Pony Ride\", \"Discover the night sky\"]\r\nconst jointSessionData = () => {\r\n\tlet arr = []\r\n\tfor (let i = 0; i < sessionData.length; i++) {\r\n\t\tconst data = sessionData[i];\r\n\t\tconst label = sessionLabels[i];\r\n\t\tconst color = sessionColor[i]\r\n\t\tarr = [...arr, {\r\n\t\t\tdata: data,\r\n\t\t\tlabel: label,\r\n\t\t\tcolor: color\r\n\t\t}]\r\n\t}\r\n\treturn arr\r\n}\r\nexport const conbinedSessionData = jointSessionData()\r\n\r\nexport const socialMediaReferralData = [\r\n\t{\r\n\t\ttitle: 'Facebook',\r\n\t\tdata:  [{\r\n\t\t\tdata: [12, 14, 2, 47, 42, 15, 47]\r\n\t\t}],\r\n\t\tpercentage: 30.1,\r\n\t\tamount: 322\r\n\t},\r\n\t{\r\n\t\ttitle: 'Twitter',\r\n\t\tdata:  [{\r\n\t\t\tdata: [9, 32, 12, 42, 25, 33]\r\n\t\t}],\r\n\t\tpercentage: 21.6,\r\n\t\tamount: 217\r\n\t},\r\n\t{\r\n\t\ttitle: 'Youtube',\r\n\t\tdata:  [{\r\n\t\t\tdata: [10, 9, 29, 19, 22, 9, 12]\r\n\t\t}],\r\n\t\tpercentage: -7.1,\r\n\t\tamount: 188\r\n\t},\r\n\t{\r\n\t\ttitle: 'Linkedin',\r\n\t\tdata:  [{\r\n\t\t\tdata: [25, 66, 41, 89, 63, 25, 44]\r\n\t\t}],\r\n\t\tpercentage: 11.9,\r\n\t\tamount: 207\r\n\t\t},\r\n\t{\r\n\t\ttitle: 'Dribbble',\r\n\t\tdata:  [{\r\n\t\t\tdata: [12, 14, 2, 47, 42, 15, 47, 75, 65, 19, 14]\r\n\t\t}],\r\n\t\tpercentage: -28.5,\r\n\t\tamount: 86\r\n\t}\r\n]\r\n\r\nexport const uniqueVisitorsDataDay = {\r\n\tseries: [\r\n\t  {\r\n\t\t\tname: \"Session Duration\",\r\n\t\t\tdata: [12, 4, 7, 15]\r\n\t  },\r\n\t  {\r\n\t\t\tname: \"Page Views\",\r\n\t\t\tdata: [8, 6, 10, 11]\r\n\t  }\r\n\t],\r\n\tcategories:[\r\n\t  '12:00 AM', \r\n\t\t'6:00 AM', \r\n\t\t'12:00 PM', \r\n\t\t'6:00 PM', \r\n\t]\r\n}\r\n\r\nexport const uniqueVisitorsDataWeek = {\r\n\tseries: [\r\n\t  {\r\n\t\t\tname: \"Session Duration\",\r\n\t\t\tdata: [45, 52, 38, 24, 33, 26, 21]\r\n\t  },\r\n\t  {\r\n\t\t\tname: \"Page Views\",\r\n\t\t\tdata: [35, 41, 62, 42, 13, 18, 29]\r\n\t  }\r\n\t],\r\n\tcategories:[\r\n\t  '01 Jan', \r\n\t  '02 Jan', \r\n\t  '03 Jan', \r\n\t  '04 Jan', \r\n\t  '05 Jan', \r\n\t  '06 Jan', \r\n\t  '07 Jan'\r\n\t]\r\n}\r\n\r\nexport const uniqueVisitorsDataMonth = {\r\n\tseries: [\r\n\t  {\r\n\t\t\tname: \"Session Duration\",\r\n\t\t\tdata: [35, 41, 62, 42, 13, 18, 29, 25, 31, 15]\r\n\t  },\r\n\t  {\r\n\t\t\tname: \"Page Views\",\r\n\t\t\tdata: [45, 52, 38, 24, 33, 26, 21, 15, 20, 16]\r\n\t  }\r\n\t],\r\n\tcategories:[\r\n\t\t'03 Jan', \r\n\t\t'06 Jan', \r\n\t\t'09 Jan', \r\n\t\t'12 Jan', \r\n\t\t'15 Jan',\r\n\t\t'18 Jan',\r\n\t\t'21 Jan',\r\n\t\t'24 Jan',\r\n\t\t'27 Jan',\r\n\t\t'30 Jan'\r\n\t]\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Row, Col, Card, Avatar, Select, Tag, Badge, List } from \"antd\";\r\nimport RegiondataWidget from \"components/shared-components/RegiondataWidget\";\r\nimport DonutChartWidget from \"components/shared-components/DonutChartWidget\";\r\nimport Flex from \"components/shared-components/Flex\";\r\nimport ChartWidget from \"components/shared-components/ChartWidget\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport ApexChart from \"react-apexcharts\";\r\nimport {\r\n  apexSparklineChartDefultOption,\r\n  COLORS,\r\n} from \"constants/ChartConstant\";\r\nimport utils from \"utils\";\r\nimport {\r\n  FacebookFilled,\r\n  TwitterSquareFilled,\r\n  LinkedinFilled,\r\n  YoutubeFilled,\r\n  DribbbleSquareFilled,\r\n  ArrowUpOutlined,\r\n  ArrowDownOutlined,\r\n} from \"@ant-design/icons\";\r\nimport {\r\n  regionData,\r\n  sessionData,\r\n  sessionLabels,\r\n  conbinedSessionData,\r\n  sessionColor,\r\n  pagesViewData,\r\n  socialMediaReferralData,\r\n  uniqueVisitorsDataWeek,\r\n  uniqueVisitorsDataDay,\r\n  uniqueVisitorsDataMonth,\r\n} from \"./AnalyticDashboardData\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst socialMediaReferralIcon = [\r\n  <FacebookFilled style={{ color: \"#1774eb\" }} />,\r\n  <TwitterSquareFilled style={{ color: \"#1c9deb\" }} />,\r\n  <YoutubeFilled style={{ color: \"#f00\" }} />,\r\n  <LinkedinFilled style={{ color: \"#0077b4\" }} />,\r\n  <DribbbleSquareFilled style={{ color: \"#e44a85\" }} />,\r\n];\r\n\r\nconst { Option } = Select;\r\n\r\nconst rederRegionTopEntrance = (\r\n  <div className=\"mb-4\">\r\n    <div className=\"d-flex align-items-center\">\r\n      <Avatar size={20} src=\"/img/flags/uae.png\" />\r\n      <h2 className=\"mb-0 ml-2 font-weight-bold\">37.61%</h2>\r\n    </div>\r\n    <span className=\"text-muted\">Top entrance region</span>\r\n  </div>\r\n);\r\n\r\nexport const AnalyticDashboard = () => {\r\n  const [uniqueVisitorsData, setUniqueVisitorsData] = useState(\r\n    uniqueVisitorsDataWeek\r\n  );\r\n  const { direction } = useSelector((state) => state.theme);\r\n\r\n  const handleVisitorsChartChange = (value) => {\r\n    switch (value) {\r\n      case \"day\":\r\n        setUniqueVisitorsData(uniqueVisitorsDataDay);\r\n        break;\r\n      case \"week\":\r\n        setUniqueVisitorsData(uniqueVisitorsDataWeek);\r\n        break;\r\n      case \"month\":\r\n        setUniqueVisitorsData(uniqueVisitorsDataMonth);\r\n        break;\r\n      default:\r\n        setUniqueVisitorsData(uniqueVisitorsDataWeek);\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row gutter={16}>\r\n        <Col xs={24} sm={24} md={24} lg={24} xxl={18}>\r\n          <RegiondataWidget\r\n            title=\"Entrance by region\"\r\n            data={regionData}\r\n            content={rederRegionTopEntrance}\r\n          />\r\n        </Col>\r\n        <Col xs={24} sm={24} md={24} lg={24} xxl={6}>\r\n          <DonutChartWidget\r\n            series={sessionData}\r\n            labels={sessionLabels}\r\n            title=\"Top Activities\"\r\n            bodyClass=\"my-3\"\r\n            customOptions={{ colors: sessionColor }}\r\n            extra={\r\n              <Row justify=\"center\">\r\n                <Col xs={20} sm={20} md={20} lg={24}>\r\n                  <div className=\"mt-4 mx-auto\" style={{ maxWidth: 200 }}>\r\n                    {conbinedSessionData.map((elm) => (\r\n                      <Flex\r\n                        alignItems=\"center\"\r\n                        justifyContent=\"between\"\r\n                        className=\"mb-3\"\r\n                        key={elm.label}\r\n                      >\r\n                        <div>\r\n                          <Badge color={elm.color} />\r\n                          <span className=\"text-gray-light\">{elm.label}</span>\r\n                        </div>\r\n                        <span className=\"font-weight-bold text-dark\">\r\n                          {elm.data}\r\n                        </span>\r\n                      </Flex>\r\n                    ))}\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n            }\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row gutter={16}>\r\n        <Col xs={24} sm={24} md={24} lg={12} xxl={6}>\r\n          <Card title=\"Most visited pages\">\r\n            <List\r\n              itemLayout=\"horizontal\"\r\n              dataSource={pagesViewData}\r\n              renderItem={(item) => (\r\n                <List.Item>\r\n                  <div className=\"d-flex align-items-center justify-content-between w-100\">\r\n                    <div>\r\n                      <h4 className=\"font-weight-bold mb-0\">{item.title}</h4>\r\n                      <span className=\"text-muted\">{item.url}</span>\r\n                    </div>\r\n                    <div>\r\n                      <Tag color=\"blue\">\r\n                        <span className=\"font-weight-bold\">\r\n                          <NumberFormat\r\n                            value={item.amount}\r\n                            thousandSeparator={true}\r\n                            displayType=\"text\"\r\n                          ></NumberFormat>\r\n                        </span>\r\n                      </Tag>\r\n                    </div>\r\n                  </div>\r\n                </List.Item>\r\n              )}\r\n            />\r\n          </Card>\r\n        </Col>\r\n        <Col xs={24} sm={24} md={24} lg={12} xxl={6}>\r\n          <Card title=\"Social media referrals\">\r\n            <List\r\n              itemLayout=\"horizontal\"\r\n              dataSource={socialMediaReferralData}\r\n              renderItem={(item, index) => (\r\n                <List.Item>\r\n                  <div className=\"d-flex align-items-center justify-content-between w-100\">\r\n                    <div className=\"d-flex align-items-center\">\r\n                      <span className=\"font-size-xxl\">\r\n                        {socialMediaReferralIcon[index]}\r\n                      </span>\r\n                      <div className=\"ml-3\">\r\n                        <h4 className=\"font-weight-bold mb-0\">{item.title}</h4>\r\n                        <span className=\"text-muted\">\r\n                          Total:{\" \"}\r\n                          <span className=\"font-weight-bold\">\r\n                            {item.amount}\r\n                          </span>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"d-flex align-items-center\">\r\n                      <ApexChart\r\n                        options={{\r\n                          ...apexSparklineChartDefultOption,\r\n                          ...{\r\n                            colors: [\r\n                              utils.getSignNum(\r\n                                item.percentage,\r\n                                COLORS[1],\r\n                                COLORS[2]\r\n                              ),\r\n                            ],\r\n                          },\r\n                        }}\r\n                        series={item.data}\r\n                        height={25}\r\n                        width={50}\r\n                      />\r\n                      <span className=\"ml-3 font-weight-bold\">\r\n                        {item.percentage}%\r\n                      </span>\r\n                      <span\r\n                        className={`ml-1 ${utils.getSignNum(\r\n                          item.percentage,\r\n                          \"text-success\",\r\n                          \"text-danger\"\r\n                        )}`}\r\n                      >\r\n                        {utils.getSignNum(\r\n                          item.percentage,\r\n                          <ArrowUpOutlined />,\r\n                          <ArrowDownOutlined />\r\n                        )}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </List.Item>\r\n              )}\r\n            />\r\n          </Card>\r\n        </Col>\r\n        <Col xs={24} sm={24} md={24} lg={24} xxl={12}>\r\n          <ChartWidget\r\n            series={uniqueVisitorsData.series}\r\n            xAxis={uniqueVisitorsData.categories}\r\n            title=\"Unique Visitors\"\r\n            height={410}\r\n            type=\"bar\"\r\n            direction={direction}\r\n            customOptions={{\r\n              colors: [COLORS[1], COLORS[0]],\r\n            }}\r\n            extra={\r\n              <Select\r\n                defaultValue=\"week\"\r\n                size=\"small\"\r\n                style={{ width: 120 }}\r\n                onChange={handleVisitorsChartChange}\r\n              >\r\n                <Option value=\"day\">Day</Option>\r\n                <Option value=\"week\">Week</Option>\r\n                <Option value=\"month\">Month</Option>\r\n              </Select>\r\n            }\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AnalyticDashboard;\r\n"],"sourceRoot":""}